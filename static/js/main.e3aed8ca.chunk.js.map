{"version":3,"sources":["api/service.ts","components/Loader.tsx","App.styles.ts","components/ProductCard.styles.ts","components/ProductCard.tsx","components/Cart.styles.ts","components/CartItem.styles.ts","components/CartItem.tsx","components/Cart.tsx","App.tsx","index.tsx"],"names":["services","baseUrl","getProducts","a","fetch","response","json","this","Loader","Box","CircularProgress","AppWrapper","styled","div","EmptyComponent","LoaderWrapper","StyledButton","button","CardWrapper","ProductCard","props","hadleAddProduct","item","image","description","title","price","src","alt","Button","onClick","Wrapper","aside","CartItem","product","removeFromCart","addToCart","id","amount","className","toFixed","size","disableElevation","variant","Cart","cartItems","length","map","reduce","acc","curr","App","useState","isOpened","setIsOpened","setCartItems","useQuery","data","isLoading","error","addProduct","prev","find","el","component","Grid","container","spacing","xs","sm","Drawer","anchor","open","onClose","items","Badge","color","badgeContent","AddShoppingCart","client","QueryClient","ReactDOM","render","StrictMode","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.e3aed8ca.chunk.js","sourcesContent":["import { IProduct } from '../interfaces/Cart';\n\ninterface IService {\n    baseUrl: string;\n    getProducts: () => Promise<IProduct[]>\n};\n\nclass Services implements IService {\n    baseUrl = '';\n\n    constructor(baseUrl: string) {\n        this.baseUrl = baseUrl;\n    }\n\n    getProducts =  async () => {\n        const response = await fetch(`${this.baseUrl}/products`);\n        return await response.json();\n    };\n\n};\n\nconst services = new Services('https://fakestoreapi.com/');\n\nexport default services;","import React from 'react';\nimport CircularProgress from '@mui/material/CircularProgress';\nimport Box from '@mui/material/Box';\n\nconst Loader = () => {\n    return (\n        <Box>\n            <CircularProgress/>\n        </Box>\n    );\n};\n\nexport default Loader\n","\nimport styled from 'styled-components';\n\nexport const AppWrapper = styled.div`\n    margin: 40px;   \n`;\n\nexport const EmptyComponent = styled.div`\n    margin-top: 10px;\n    font-size: 18px;\n`;\n\nexport const LoaderWrapper = styled.div`\n    margin: 10% auto;\n    display: block;\n    width: fit-content;\n`;\n\nexport const StyledButton = styled.button`\n  position: fixed;\n  z-index: 100;\n  right: 20px;\n  top: 20px;\n`;","import styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-direction: column;\n  width: 100%;\n  border: 1px solid lightgray;\n  border-radius: 20px;\n  height: 100%;\n  button {\n    border-radius: 0 0 20px 20px;\n    background-color: lightgray\n  }\n  img {\n    max-height: 250px;\n    object-fit: cover;\n    border-radius: 20px 20px 0 0;\n  }\n  div {\n    font-family: Arial, Helvetica, sans-serif;\n    padding: 1rem;\n    height: 100%;\n  }\n`;\n","import React from 'react';\nimport { IProduct } from '../interfaces/Cart';\nimport { CardWrapper } from './ProductCard.styles';\nimport { Button } from '@mui/material';\n\ninterface Props {\n    item: IProduct,\n    hadleAddProduct: (product: IProduct) => void;\n};\n\nconst ProductCard = (props: Props) => {\n    const { hadleAddProduct, item } = props;\n    const { image, description, title, price } = item;\n    return (\n        <CardWrapper>\n        <img src={image} alt={title}/>\n        <div>\n            <h3>{title}</h3>\n            <p>{description}</p>\n            <h3>${price}</h3>\n        </div>\n        <Button onClick={() => hadleAddProduct(item)}>Add to cart</Button>\n        </CardWrapper>\n    )\n}\n\nexport default ProductCard\n","import styled from 'styled-components';\n\nconst Wrapper = styled.aside`\n  font-family: Arial, Helvetica, sans-serif;\n  width: 500px;\n  padding: 20px;\n`;\n\nexport default Wrapper;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  font-family: Arial, Helvetica, sans-serif;\n  border-bottom: 1px solid lightblue;\n  padding-bottom: 20px;\n  div {\n    flex: 1;\n  }\n  .information,\n  .buttons {\n    display: flex;\n    justify-content: space-between;\n  }\n  img {\n    max-width: 80px;\n    object-fit: cover;\n    margin-left: 40px;\n  }\n`;","import React from 'react';\nimport { IProduct } from '../interfaces/Cart';\nimport { Wrapper } from './CartItem.styles';\nimport { Button } from '@mui/material';\n\ninterface IProps {\n    product: IProduct;\n    removeFromCart: (id: number) => void;\n    addToCart: (product: IProduct) => void;\n};\n\nconst CartItem: React.FC<IProps> = ({ product, removeFromCart, addToCart }) => {\n    const { title, price, image, id, amount } = product;\n    return (\n    <Wrapper>\n            <div>\n            <h3>{title}</h3>\n            <div className='information'>\n                <p>Price: ${price}</p>\n                <p>Total: ${(amount * price).toFixed(2)}</p>\n            </div>\n            <div className='buttons'>\n                <Button\n                size='small'\n                disableElevation\n                variant='contained'\n                onClick={() => removeFromCart(id)}\n                >\n                -\n                </Button>\n                <p>{amount}</p>\n                <Button\n                size='small'\n                disableElevation\n                variant='contained'\n                onClick={() => addToCart(product)}\n                >\n                +\n                </Button>\n            </div>\n        </div>\n        <img src={image} alt={title}/>\n    </Wrapper>\n    )\n}\n\nexport default CartItem\n","import React from 'react';\nimport { IProduct } from '../interfaces/Cart';\nimport Wrapper from './Cart.styles';\nimport CartItem from './CartItem';\n\ninterface IProps {\n    cartItems: IProduct[];\n    addToCart: (product: IProduct) => void;\n    removeFromCart: (id: number) => void;\n};\n\nconst Cart: React.FC<IProps> = ({ cartItems, addToCart, removeFromCart }) => {\n    const sum = () => {\n        return cartItems.reduce((acc,curr) => {\n            return acc + (curr.price * curr.amount)\n        },0)\n    };\n\n    return (\n        <Wrapper>\n            <h3>Your shopping cart</h3>\n            {cartItems.length === 0 ? <p>No items in cart.</p> : null}\n            {cartItems.map(product => {\n                return (\n                    <CartItem\n                        product={product}\n                        addToCart={addToCart}\n                        removeFromCart={removeFromCart}\n                    />\n                )\n            })}\n            <h2>Total: ${sum().toFixed()}</h2>\n        </Wrapper>\n    )\n}\n\nexport default Cart\n","import React, { useState } from 'react';\nimport { useQuery } from 'react-query';\nimport services from './api/service';\nimport { IProduct } from './interfaces/Cart';\nimport Loader from './components/Loader';\n//import ErrorIcon from '@mui/icons-material/Error';\nimport { AppWrapper, EmptyComponent, LoaderWrapper, StyledButton } from './App.styles';\nimport ProductCard from './components/ProductCard';\nimport { Drawer } from '@mui/material';\nimport Grid from '@mui/material/Grid';\nimport Cart from './components/Cart';\nimport { Badge } from '@mui/material';\nimport { AddShoppingCart } from '@material-ui/icons'\n\nimport './App.css';\n\nfunction App() {\n  const [isOpened,setIsOpened] = useState<boolean>(false);\n  const [cartItems,setCartItems] = useState<IProduct[]>([]);\n  const { data, isLoading, error } = useQuery<IProduct[]>('products',services.getProducts);\n\n  const addProduct = (product: IProduct): void => {\n    setCartItems(prev => {\n      const current = prev.find(el => el.id === product.id);\n\n      if (current) {\n        return prev.map(el => {\n          return el.id === product.id ? { ...el, amount: el.amount + 1 } : el;\n        })\n      } else {\n        return [...prev, { ...product, amount: 1 }]\n      }\n    })\n  };\n\n  const removeProduct = (id: number) => {\n    setCartItems(prev => {\n      return prev.reduce((items, item) => {\n        if (item.id === id) {\n          if (item.amount === 1)\n            return items;\n          return [...items, { ...item, amount: item.amount - 1 }];\n        } else {\n          return [...items, item];\n        }\n      }, [] as IProduct[]);\n    })\n  };\n\n  const countProducts = (): number => {\n    return cartItems.length;\n  };\n  \n  let component = null;\n  if (isLoading) {\n    component = (\n      <LoaderWrapper>\n        <Loader/>\n      </LoaderWrapper>\n    )\n  } else if (!isLoading && error) {\n    component = <div>Error</div>\n  } else if (data?.length === 0) {\n    component = <EmptyComponent>no data</EmptyComponent>\n  } else {\n    component = (\n      <Grid container spacing={3}>\n        {\n        data?.map((item: IProduct)  => {\n          return (\n              <Grid key={item.id} xs={12} sm={4}>\n                <ProductCard item={item} hadleAddProduct={addProduct}/>\n              </Grid>\n          )\n        })\n        }\n\n    </Grid>\n    )\n  }\n  return (\n    <AppWrapper>\n      <Drawer anchor=\"right\" open={isOpened} onClose={() => setIsOpened(false)}>\n        <Cart\n          cartItems={cartItems}\n          addToCart={addProduct}\n          removeFromCart={removeProduct}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setIsOpened(true)}>\n      <Badge color=\"error\" badgeContent={countProducts()}>\n        <AddShoppingCart/>\n      </Badge>\n      </StyledButton>\n      {component}\n    </AppWrapper>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <QueryClientProvider client={client}>\n    <App />\n    </QueryClientProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}